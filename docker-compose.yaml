version: "3"
services:
  app:
    container_name: app #define the name of the container
    hostname: cmpt370-app
    build: ./app #build the image from the dockerfile in the specified location
    ports:
    - "8080:8080" # Forward the exposed port 8080 on the container to port 80 on the host machine
    volumes:
        - ./app/:/app/
        - /app/node_modules
        #- ./app/src:/app/src
    restart: "unless-stopped"
    depends_on:
    - backend #app depends on the backend container so start that first
    links:
    - backend
    networks:
    - cmpt370 #define the docker network that the container is on so all containers can communicate
  backend:
    container_name: backend
    hostname: cmpt370-api
    build: ./backend
    ports:
    - "5000:5000"
    volumes:
    - ./backend:/app
    restart: "unless-stopped"
    depends_on:
    - neo4j
#    command: ["./wait-for-it.sh", "bolt://cmpt370-db:7474","-t", "100", "--", "python", "main.py"]
    networks:
      - cmpt370
  neo4j:
    container_name: neo4j
    hostname: cmpt370-db
    image: neo4j:latest
    ports: 
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/plugins:/plugins
      - ./neo4j/logs:/logs
      - ./neo4j/imports:/imports
    restart: "unless-stopped"
    environment:
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_AUTH: none
      # NEO4J_dbms_default__advertised__address: 0.0.0.0
      # NEO4J_dbms_connector_http_listen__address: 0.0.0.0:7474
      # NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4J_dbms_default__database: mainDB
      
    healthcheck:
      test: [ "CMD-SHELL", "echo RETURN 1 | cypher-shell -a bolt://localhost:7687 -u admin -p password || exit 1" ]
    networks:
      - cmpt370
    

networks:
  cmpt370:
volumes:
  Neo4j:
